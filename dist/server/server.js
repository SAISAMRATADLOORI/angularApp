"use strict";
var express = require("express");
var config = require("./app/config");
var collectionsRoutes_1 = require("./app/routes/collectionsRoutes");
var app = express();
var port = process.env.port || config.applicationPort;
console.log("Dir name - " + __dirname);
app.use(express.static(__dirname + '/public'));
// Add headers
app.use(function (req, res, next) {
    console.log("Origin  - " + req.header('Origin'));
    // Website you wish to allow to connect
    if (req.header('Origin')) {
        res.setHeader('Access-Control-Allow-Origin', req.header('Origin'));
    }
    // Request methods you wish to allow
    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');
    // Request headers you wish to allow
    res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');
    // Set to true if you need the website to include cookies in the requests sent
    // to the API (e.g. in case you use sessions)
    res.setHeader('Access-Control-Allow-Credentials', 'true');
    // Pass to next layer of middleware
    next();
});
app.use('/', collectionsRoutes_1.router);
var server = app.listen(port);
console.log("Started running App on port " + port + " ");

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsaUNBQW1DO0FBRW5DLHFDQUF5QztBQUN6QyxvRUFBdUU7QUFFdkUsSUFBTSxHQUFHLEdBQVksT0FBTyxFQUFFLENBQUM7QUFFL0IsSUFBTSxJQUFJLEdBQVksT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksTUFBTSxDQUFDLGVBQWUsQ0FBQztBQUVqRSxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsR0FBQyxTQUFTLENBQUMsQ0FBQTtBQUNwQyxHQUFHLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFHL0MsY0FBYztBQUNkLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUk7SUFFNUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEdBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQy9DLHVDQUF1QztJQUN2QyxFQUFFLENBQUEsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUEsQ0FBQztRQUN6QixHQUFHLENBQUMsU0FBUyxDQUFDLDZCQUE2QixFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNuRSxDQUFDO0lBRUQsb0NBQW9DO0lBQ3BDLEdBQUcsQ0FBQyxTQUFTLENBQUMsOEJBQThCLEVBQUUsd0NBQXdDLENBQUMsQ0FBQztJQUV4RixvQ0FBb0M7SUFDcEMsR0FBRyxDQUFDLFNBQVMsQ0FBQyw4QkFBOEIsRUFBRSwrQkFBK0IsQ0FBQyxDQUFDO0lBRS9FLDhFQUE4RTtJQUM5RSw2Q0FBNkM7SUFDN0MsR0FBRyxDQUFDLFNBQVMsQ0FBQyxrQ0FBa0MsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUUxRCxtQ0FBbUM7SUFDbkMsSUFBSSxFQUFFLENBQUM7QUFDWCxDQUFDLENBQUMsQ0FBQztBQUVILEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFDLDBCQUFXLENBQUMsQ0FBQztBQUV6QixJQUFJLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRzlCLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUNBQStCLElBQUksTUFBRyxDQUFDLENBQUMiLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgKiBhcyBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgRXhwcmVzcyB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0ICAqIGFzIGNvbmZpZyAgZnJvbSAnLi9hcHAvY29uZmlnJztcbmltcG9ydCB7IHJvdXRlciBhcyBjb2xsZWN0aW9ucyB9IGZyb20gJy4vYXBwL3JvdXRlcy9jb2xsZWN0aW9uc1JvdXRlcyc7XG5cbmNvbnN0IGFwcDogRXhwcmVzcyA9IGV4cHJlc3MoKTtcblxuY29uc3QgcG9ydDogbnVtYmVyID0gIHByb2Nlc3MuZW52LnBvcnQgfHwgY29uZmlnLmFwcGxpY2F0aW9uUG9ydDtcblxuY29uc29sZS5sb2coXCJEaXIgbmFtZSAtIFwiK19fZGlybmFtZSlcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoX19kaXJuYW1lICsgJy9wdWJsaWMnKSk7XG5cblxuLy8gQWRkIGhlYWRlcnNcbmFwcC51c2UoZnVuY3Rpb24gKHJlcSwgcmVzLCBuZXh0KSB7XG5cbiAgICBjb25zb2xlLmxvZyhcIk9yaWdpbiAgLSBcIityZXEuaGVhZGVyKCdPcmlnaW4nKSk7XG4gICAgLy8gV2Vic2l0ZSB5b3Ugd2lzaCB0byBhbGxvdyB0byBjb25uZWN0XG4gICAgaWYocmVxLmhlYWRlcignT3JpZ2luJykpe1xuICAgIHJlcy5zZXRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbicsIHJlcS5oZWFkZXIoJ09yaWdpbicpKTtcbiAgICB9XG5cbiAgICAvLyBSZXF1ZXN0IG1ldGhvZHMgeW91IHdpc2ggdG8gYWxsb3dcbiAgICByZXMuc2V0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJywgJ0dFVCwgUE9TVCwgT1BUSU9OUywgUFVULCBQQVRDSCwgREVMRVRFJyk7XG5cbiAgICAvLyBSZXF1ZXN0IGhlYWRlcnMgeW91IHdpc2ggdG8gYWxsb3dcbiAgICByZXMuc2V0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJywgJ1gtUmVxdWVzdGVkLVdpdGgsY29udGVudC10eXBlJyk7XG5cbiAgICAvLyBTZXQgdG8gdHJ1ZSBpZiB5b3UgbmVlZCB0aGUgd2Vic2l0ZSB0byBpbmNsdWRlIGNvb2tpZXMgaW4gdGhlIHJlcXVlc3RzIHNlbnRcbiAgICAvLyB0byB0aGUgQVBJIChlLmcuIGluIGNhc2UgeW91IHVzZSBzZXNzaW9ucylcbiAgICByZXMuc2V0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFscycsICd0cnVlJyk7XG5cbiAgICAvLyBQYXNzIHRvIG5leHQgbGF5ZXIgb2YgbWlkZGxld2FyZVxuICAgIG5leHQoKTtcbn0pO1xuXG5hcHAudXNlKCcvJyxjb2xsZWN0aW9ucyk7XG5cbmxldCBzZXJ2ZXIgPSBhcHAubGlzdGVuKHBvcnQpO1xuXG5cbmNvbnNvbGUubG9nKGBTdGFydGVkIHJ1bm5pbmcgQXBwIG9uIHBvcnQgJHtwb3J0fSBgKTsiXX0=
